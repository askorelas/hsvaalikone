// Generated by CoffeeScript 1.8.0
var h, halfh, halfw, margin, totalh, totalw, w, mychart;

h = 500;
w = 800;

margin = {
  left: 60,
  top: 40,
  right: 40,
  bottom: 40,
  inner: 5
};

halfh = h + margin.top + margin.bottom;
totalh = halfh * 2;
halfw = w + margin.left + margin.right;
totalw = halfw * 2;

//Define color schemes
var partyColors = ["#f3811a", "#196d36", "#136389", "#5dd9fd", "#009BC2", "#0f28b3", "#000000", "#ee2722", "#a60b1d", "#ffdd00", "#b1d34a", "#61bf1a"];
var ageColors = ["#000000", "#444444", "#777777", "#aaaaaa", "#dddddd", "#ffffff", "#ffffff", "#ff0000"];
var genderColors = ["#66CCFF", "#FFCCFF"];
var districtColors = ["#CCCCCC", "#003366", "#FFFFFF", "#CCCC99", "#561420", "#821122", "#C59A6F", "#333333", "#FF9933", "#003399", "#99CCCC", "#000000"];

var colorSchemes = {
  parties: {
    "Itsenäisyyspuolue": "#f3811a",
    "Keskusta": "#196d36",
    "Kokoomus": "#136389",
    "Kristillisdemokraatit": "#5dd9fd",
    "Muutos 2011": "#009BC2",
    "Perussuomalaiset": "#0f28b3",
    "Piraattipuolue": "#000000",
    "RKP": "#ee2722",
    "SDP": "#a60b1d",
    "SKP": "#ffdd00",
    "Vasemmisto": "#b1d34a",
    "Vihreät": "#61bf1a"
  },
  ages: {
    "Alle 30": "#000000",
    "30 - 39": "#444444",
    "40 - 49": "#777777",
    "50 - 59": "#aaaaaa",
    "60 - 69": "#dddddd",
    "70 tai yli": "#ffffff",
    "Puuttuu": "#ff0000"
  },
  genders: {
    "Mies": "#66CCFF",
    "Nainen": "#FFCCFF"
  },
  districts: {
    "Häme": "#CCCCCC",
    "Helsinki": "#003366",
    "Uusimaa": "#FFFFFF",
    "Keski-Suomi": "#CCCC99",
    "Lappi": "#561420",
    "Kaakkois-Suomi": "#821122",
    "Oulu": "#C59A6F",
    "Vaasa": "#333333",
    "Pirkanmaa": "#FF9933",
    "Satakunta": "#003399",
    "Savo-Karjala": "#99CCCC",
    "Varsinais-Suomi": "#000000"
  }
};

//groupIndex indicates the column number in the data that contains the group information
var getGroups = function(groupIndex) {
  var _i, _len, _results;
  _results = [];
  for (_i = 0, _len = data.length; _i < _len; _i++) {
    grpNum = data[_i][groupIndex]; //6th value is group
    _results.push(grpNum);
  }
  return _results;
};



var renderChart = function(colorScheme, groups){
  mychart = scatterplot()
    .xlab("")
    .ylab("")
    .xlim([8,-10])
    .ylim([-7.5,7])
    .height(h)
    .width(w)
    .margin(margin)
    .rectcolor("rgba(0,0,0,0)")
    .pointstroke("black")
    .pointcolor(colorScheme)
    .nxticks(0)
    .nyticks(0)
    .margin({left:60, top:0, right:40, bottom:40, inner:5});
  $("div#chart1").html("");
  d3.select("div#chart1").datum({
    data: data,
    group: groups
  }).call(mychart);

  mychart.pointsSelect().on("click", function(d) {
    var row = data[d];

    $("#details-pane #name").html(row[3]);
    $("#details-pane #district").html(row[4]);
    $("#details-pane #party").html(row[5]);
    $("#details-pane #age").html(row[7]);
    $("#details-pane #www").attr("href", row[9]).html(row[9]);
    $("#details-pane #education").html(row[12]);

    $('#details-pane #q1').html(row[13]);
    $('#details-pane #q2').html(row[14]);
    $('#details-pane #q3').html(row[15]);
    $('#details-pane #q4').html(row[16]);
    $('#details-pane #q5').html(row[17]);
    $('#details-pane #q6').html(row[18]);
    $('#details-pane #q7').html(row[19]);
    $('#details-pane #q8').html(row[20]);
    $('#details-pane #q9').html(row[21]);
    $('#details-pane #q10').html(row[22]);
    $('#details-pane #q11').html(row[23]);
    $('#details-pane #q12').html(row[24]);
    $('#details-pane #q13').html(row[25]);
    $('#details-pane #q14').html(row[26]);
    $('#details-pane #q15').html(row[27]);
    $('#details-pane #q16').html(row[28]);
    $('#details-pane #q17').html(row[29]);
    $('#details-pane #q18').html(row[30]);
    $('#details-pane #q19').html(row[31]);
    $('#details-pane #q20').html(row[32]);
    $('#details-pane #q21').html(row[33]);
    $('#details-pane #q22').html(row[34]);
    $('#details-pane #q23').html(row[35]);
    $('#details-pane #q24').html(row[36]);
    $('#details-pane #q25').html(row[37]);
    $('#details-pane #q26').html(row[38]);
    $('#details-pane #q27').html(row[39]);
    $('#details-pane #q28').html(row[40]);
    $('#details-pane #q29').html(row[41]);
    $('#details-pane #q30').html(row[42]);
  });

  highlightSearchedItems();
};

$(document).ready(function(){
  renderChart(partyColors, getGroups(6)); //6th col is party

	$("#candidate-filter").on("keyup change", function(e) {
    $("#points circle").attr("r", 3);
    highlightSearchedItems();
  });

  $("#colorByParty").change(function(){
    renderChart(partyColors, getGroups(6));
    $(".legend").hide();
    $("#partyLegend").show();
  });
  $("#colorByAge").change(function(){
    renderChart(ageColors, getGroups(43));
    $(".legend").hide();
    $("#ageLegend").show();
  });
  $("#colorByGender").change(function(){
    renderChart(genderColors, getGroups(8));
    $(".legend").hide();
    $("#genderLegend").show();
  });
  $("#colorByDistrict").change(function(){
    renderChart(districtColors, getGroups(44));
    $(".legend").hide();
    $("#districtLegend").show();
  });

  //===============
  // Render legends

  // Parties
  var partyNames = Object.getOwnPropertyNames(colorSchemes.parties);
  //Maintain order
  for(var i=0;i<partyNames.length;i++){
    var partyName = partyNames[i];
    var color = colorSchemes.parties[partyName];
    renderLegendItem("#partyLegend", partyName, color);
  }

  // Districts
  var districtNames = Object.getOwnPropertyNames(colorSchemes.districts);
  for(var i=0;i<districtNames.length;i++){
    var districtName = districtNames[i];
    var color = colorSchemes.districts[districtName];
    console.log(color);
    renderLegendItem("#districtLegend", districtName, color);
  }

  // Ages
  var ageNames = Object.getOwnPropertyNames(colorSchemes.ages);
  for(var i=0;i<ageNames.length;i++){
    var ageName = ageNames[i];
    var color = colorSchemes.ages[ageName];
    renderLegendItem("#ageLegend", ageName, color);
  }

  // Genders
  var genderNames = Object.getOwnPropertyNames(colorSchemes.gender);
  for(var i=0;i<genderNames.length;i++){
    var genderName = genderNames[i];
    var color = colorSchemes.gender[genderName];
    renderLegendItem("#genderLegend", genderName, color);
  }

});

var highlightSearchedItems = function(){
  var qry=$("#candidate-filter").val().toLowerCase();
  //Don't search if query string is less than 3 characters
  if(qry.length>2){
    for(var i=0;i<data.length;i++){
      //Check if name contains query string
      if(data[i][3].toLowerCase().indexOf(qry) >= 0){
        $("circle.pt"+i).attr("r", 9);
      }
    }
  }
};

var renderLegendItem = function(parentSelector, label, color){
  var htmlStr =
    '<div class="legend-item">'+
      '<svg width="10" height="10">'+
        '<g>'+
          '<circle cx="5" cy="5" class="pt907" r="3" fill="'+color+'" stroke="black" stroke-width="1" opacity="1"></circle>'+
        '</g>'+
      '</svg>'+
      label +
    '</div>';
  $(parentSelector).append(htmlStr);
}
